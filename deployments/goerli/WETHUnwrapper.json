{
  "address": "0x93BFF29Fdf34730Dd90a21E82073739eEbb2c11E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa67bbf15f6bdd80be72c3df0ab0e0d7a1a5ff54555c14f366ac797e753eb9077",
  "receipt": {
    "to": null,
    "from": "0x00000D48CE9275c49dE72391462874fA27c56654",
    "contractAddress": "0x93BFF29Fdf34730Dd90a21E82073739eEbb2c11E",
    "transactionIndex": 105,
    "gasUsed": "141577",
    "logsBloom": "0x
    "blockHash": "0xc52733f4f4f34071512c60bea4a76de46aaff315f2f21c1f1d95ae6328c2f3bc",
    "transactionHash": "0xa67bbf15f6bdd80be72c3df0ab0e0d7a1a5ff54555c14f366ac797e753eb9077",
    "logs": [],
    "blockNumber": 8095588,
    "cumulativeGasUsed": "18538611",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f0a0fde2fb4fe77499cc2361feac9c81",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"withdraw(uint256)\":{\"details\":\"msg.sender needs to send WETH before calling this withdraw\",\"params\":{\"_amount\":\"amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"withdraw(uint256)\":{\"notice\":\"Convert WETH to ETH and transfer to msg.sender\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/WETHUnwrapper.sol\":\"WETHUnwrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/helpers/WETHUnwrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IWETH.sol\\\";\\n\\ncontract WETHUnwrapper {\\n    address constant weth = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n\\n    receive() external payable {}\\n\\n    /// @notice Convert WETH to ETH and transfer to msg.sender\\n    /// @dev msg.sender needs to send WETH before calling this withdraw\\n    /// @param _amount amount to withdraw.\\n    function withdraw(uint256 _amount) external {\\n        IWETH(weth).withdraw(_amount);\\n        (bool sent, ) = msg.sender.call{value: _amount}(\\\"\\\");\\n        require(sent, \\\"Failed to send ETH\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x33eaa2b7ba5aa0b9fa6887f9a54e82979aedd46312f601ec636a852cf07585b4\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.16;\\n\\ninterface IWETH {\\n    function balanceOf(address account) external view returns (uint256);\\n    function deposit() external payable;\\n    function withdraw(uint256) external;\\n    function approve(address guy, uint256 wad) external returns (bool);\\n    function transfer(address dst, uint256 wad) external returns (bool);\\n    function transferFrom(address src, address dst, uint256 wad) external returns (bool);\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x4aef4fdbc6dcc0abb087983f9db742d17683c99b893ccc2481577958f9790474\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610199806100206000396000f3fe6080604052600436106100225760003560e01c80632e1a7d4d1461002e57600080fd5b3661002957005b600080fd5b34801561003a57600080fd5b5061004e61004936600461014a565b610050565b005b604051632e1a7d4d60e01b81526004810182905273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d90602401600060405180830381600087803b15801561009d57600080fd5b505af11580156100b1573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d80600081146100f7576040519150601f19603f3d011682016040523d82523d6000602084013e6100fc565b606091505b50509050806101465760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b604482015260640160405180910390fd5b5050565b60006020828403121561015c57600080fd5b503591905056fea2646970667358221220fa326408e965df2b31c9b3a4715836ad590e29393e45c5caf22327aeb9a7ca1464736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100225760003560e01c80632e1a7d4d1461002e57600080fd5b3661002957005b600080fd5b34801561003a57600080fd5b5061004e61004936600461014a565b610050565b005b604051632e1a7d4d60e01b81526004810182905273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc290632e1a7d4d90602401600060405180830381600087803b15801561009d57600080fd5b505af11580156100b1573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d80600081146100f7576040519150601f19603f3d011682016040523d82523d6000602084013e6100fc565b606091505b50509050806101465760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b604482015260640160405180910390fd5b5050565b60006020828403121561015c57600080fd5b503591905056fea2646970667358221220fa326408e965df2b31c9b3a4715836ad590e29393e45c5caf22327aeb9a7ca1464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "withdraw(uint256)": {
        "details": "msg.sender needs to send WETH before calling this withdraw",
        "params": {
          "_amount": "amount to withdraw."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "withdraw(uint256)": {
        "notice": "Convert WETH to ETH and transfer to msg.sender"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}